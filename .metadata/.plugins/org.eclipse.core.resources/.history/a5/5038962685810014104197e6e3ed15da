/**
*
* @author rachana
*/

package com.algorithm.pairs;

import java.io.IOException;

import org.apache.hadoop.io.DoubleWritable;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.mapreduce.RecordWriter;
import org.apache.hadoop.mapreduce.Reducer;

public class RelativeFrequencyReducer extends Reducer<Pair, IntWritable, Pair, DoubleWritable> {
	
	double recentPairCount=0;
	DoubleWritable freq = new DoubleWritable();
	
    public void reduce(Pair key, Iterable<IntWritable> values, RecordWriter<Pair, DoubleWritable> output)
            throws IOException, InterruptedException {
        int total = 0;        
        for(IntWritable value: values){
            total+= value.get();
        }
        
        if(key.neighbor()==0)
        	recentPairCount=total;
        else
        {
        	freq.set(total/recentPairCount);
        	output.write(key,freq);
        }
    }
}
